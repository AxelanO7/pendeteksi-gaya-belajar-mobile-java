// Generated by view binder compiler. Do not edit!
package com.putri.aplikasipendeteksigayabesar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RadioButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.putri.aplikasipendeteksigayabesar.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EditDaBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText et1;

  @NonNull
  public final EditText et2;

  @NonNull
  public final EditText et3;

  @NonNull
  public final EditText et4;

  @NonNull
  public final RadioButton rb1;

  @NonNull
  public final RadioButton rb2;

  @NonNull
  public final RadioButton rb3;

  @NonNull
  public final RadioButton rb4;

  private EditDaBinding(@NonNull ConstraintLayout rootView, @NonNull EditText et1,
      @NonNull EditText et2, @NonNull EditText et3, @NonNull EditText et4, @NonNull RadioButton rb1,
      @NonNull RadioButton rb2, @NonNull RadioButton rb3, @NonNull RadioButton rb4) {
    this.rootView = rootView;
    this.et1 = et1;
    this.et2 = et2;
    this.et3 = et3;
    this.et4 = et4;
    this.rb1 = rb1;
    this.rb2 = rb2;
    this.rb3 = rb3;
    this.rb4 = rb4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EditDaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EditDaBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.edit_da, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EditDaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et1;
      EditText et1 = ViewBindings.findChildViewById(rootView, id);
      if (et1 == null) {
        break missingId;
      }

      id = R.id.et2;
      EditText et2 = ViewBindings.findChildViewById(rootView, id);
      if (et2 == null) {
        break missingId;
      }

      id = R.id.et3;
      EditText et3 = ViewBindings.findChildViewById(rootView, id);
      if (et3 == null) {
        break missingId;
      }

      id = R.id.et4;
      EditText et4 = ViewBindings.findChildViewById(rootView, id);
      if (et4 == null) {
        break missingId;
      }

      id = R.id.rb1;
      RadioButton rb1 = ViewBindings.findChildViewById(rootView, id);
      if (rb1 == null) {
        break missingId;
      }

      id = R.id.rb2;
      RadioButton rb2 = ViewBindings.findChildViewById(rootView, id);
      if (rb2 == null) {
        break missingId;
      }

      id = R.id.rb3;
      RadioButton rb3 = ViewBindings.findChildViewById(rootView, id);
      if (rb3 == null) {
        break missingId;
      }

      id = R.id.rb4;
      RadioButton rb4 = ViewBindings.findChildViewById(rootView, id);
      if (rb4 == null) {
        break missingId;
      }

      return new EditDaBinding((ConstraintLayout) rootView, et1, et2, et3, et4, rb1, rb2, rb3, rb4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
