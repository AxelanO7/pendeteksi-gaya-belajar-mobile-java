// Generated by view binder compiler. Do not edit!
package com.putri.aplikasipendeteksigayabesar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.putri.aplikasipendeteksigayabesar.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class StyleSrBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView aktif;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final ConstraintLayout mainLayout;

  @NonNull
  public final TextView nama;

  @NonNull
  public final TextView sekuensial;

  @NonNull
  public final TextView sensorik;

  @NonNull
  public final TextView visual;

  private StyleSrBinding(@NonNull ConstraintLayout rootView, @NonNull TextView aktif,
      @NonNull LinearLayout linearLayout, @NonNull ConstraintLayout mainLayout,
      @NonNull TextView nama, @NonNull TextView sekuensial, @NonNull TextView sensorik,
      @NonNull TextView visual) {
    this.rootView = rootView;
    this.aktif = aktif;
    this.linearLayout = linearLayout;
    this.mainLayout = mainLayout;
    this.nama = nama;
    this.sekuensial = sekuensial;
    this.sensorik = sensorik;
    this.visual = visual;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StyleSrBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StyleSrBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.style_sr, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StyleSrBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aktif;
      TextView aktif = ViewBindings.findChildViewById(rootView, id);
      if (aktif == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      ConstraintLayout mainLayout = (ConstraintLayout) rootView;

      id = R.id.nama;
      TextView nama = ViewBindings.findChildViewById(rootView, id);
      if (nama == null) {
        break missingId;
      }

      id = R.id.sekuensial;
      TextView sekuensial = ViewBindings.findChildViewById(rootView, id);
      if (sekuensial == null) {
        break missingId;
      }

      id = R.id.sensorik;
      TextView sensorik = ViewBindings.findChildViewById(rootView, id);
      if (sensorik == null) {
        break missingId;
      }

      id = R.id.visual;
      TextView visual = ViewBindings.findChildViewById(rootView, id);
      if (visual == null) {
        break missingId;
      }

      return new StyleSrBinding((ConstraintLayout) rootView, aktif, linearLayout, mainLayout, nama,
          sekuensial, sensorik, visual);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
